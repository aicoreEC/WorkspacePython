#
# 0. Open
# 1. Topic
#    1.1 Python 개요
#    1.2 Python 개발 환경 구축
#    1.3 Python 프로그램 구조
#    1.4 Python 자료형
# 2. Q & A
# 3. Next
# 4. Close
#





#
# 컴퓨테이셔널 씽킹( computational thinking ) : 현실 세계의 문제를 분석하여
#   해결책을 찾는 과학적 사고법
#
# 문제해결을 위한 과학적 사고
#   -> 복잡한 문제를 작은 문제로 나누어서 하나씩 접근한다.
#   -> 예) 기상청 날씨 데이터를 그래프로 그리는 문제
#          1. HTML 분석하기
#          2. HTML에서 기온과 습도 가져와서 정형화된 데이터로 만든다.
#          3. 데이터 중에서 주요 도시 추출
#          4. 데이터로 그래프 그리기 
#
# 작은 문제를 분해하고, 문제의 패턴을 발견하고, 어떤 데이터를 이용해야 하는지 결정하고,
# 문제를 일반화하고 모델링할 수 있는지를 찾는 과정
#
#   패턴 : HTML에서 도시, 기온, 습도의 패턴을 파악
#   데이터 : HTML, 도시 이름, 기온, 습도
#   일반화와 모델링 : HTML에서 데이터 가져오기, HTML 부석
#





# Python Shell
# Python prompt
# 
# 대화형 셀 : Python 셀은 파이썬 인터프리터와 대화하듯이 코드를 처리한다고 해서
#             대화형 셀( interactive shell ) 또는 인터랙티브 모드( interactive mode )라 부른다.
#             특히 이런 방식을 코드를 읽고, 평가( 계산, 실행 )하고, 출력한다고 해서
#             REPL( Read-Eval-Print Loop )이라고 한다
#
# 파이썬 코드를 파일로 저장해서 실행하는 방식을 스크립트 모드( script mode )라고 한다.
#
# 파이썬 코드를 저장한 .py 파일을 파이썬 스크립트( Python script )
#
# 파이썬 실행 방법
# 1. 파이썬 IDLE 이용하여 파이썬 인터프리터 실행 하는 방법
# 2. cmd( Windows ), terminal( Linux, MacOS ), anaconda prompt에서 python 실행하는 방법
# 3. python 스크립트파일.py
#

# 주석( comment ) : # 기호 사용, ''' ''' 또는 """ """ 도 주석으로 사용
#
# 들여쓰기( indentation ) : 코드를 읽기 쉽도록 일정한 간경으로 띄워서 작성하는 방법으로
#                           파이썬에서는 제어문, 함수, 클래스에서 코드블록을 정의할 때 반드시 사용한다.
# 코드 블록 : 특정한 동작을 위해서 코드가 모여 있는 상태를 뜻하며 파이썬은 들여쓰기를 기준으로 코드 블록을 구성
#
